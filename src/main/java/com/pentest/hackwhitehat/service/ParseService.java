package com.pentest.hackwhitehat.service;

import com.pentest.hackwhitehat.entity.NmapScan;
import com.pentest.hackwhitehat.entity.WpScan;
import org.springframework.stereotype.Service;

import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Service
public class ParseService {
    public NmapScan parseNmapOutput(String logs) {
        String nmapOutput = logs;
        String[] lines = nmapOutput.split("\\r?\\n");

        // Parse IP address, host status and open ports
        String ipAddress = null;
        String hostStatus = null;
        List<String> openPorts = new ArrayList<>();

        for (String line : lines) {
            if (line.startsWith("Nmap scan report for ")) {
                ipAddress = line.substring("Nmap scan report for ".length());
            } else if (line.contains("Host is up")) {
                hostStatus = "Up";
            } else if (line.contains("Host is down")) {
                hostStatus = "Down";
            } else if (line.contains("open")) {
                openPorts.add(line);
            }
        }
        System.out.println("IP Address: " + ipAddress);
        System.out.println("Host Status: " + hostStatus);
        System.out.println("Open Ports: " + openPorts);

        // Return all the parsed data
        return new NmapScan(ipAddress, hostStatus, openPorts);
    }

    public List<WpScan> parseWpscanLogs(String logs) {

        String expregu = ".*Scan Aborted.*";

        Pattern patternExpregu = Pattern.compile(expregu, Pattern.CASE_INSENSITIVE);
        Matcher matcherExpregu = patternExpregu.matcher(logs);

        //extrait le titre et les références d'un certain format dans une chaîne de caractères.
        String regex = "Title:\\s(.*?)\\s-.*?\\|\\sReferences:\\s\\|(.*?)\\|";
        List<WpScan> vulnerabilities = new ArrayList<>();
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(logs);

        if (matcherExpregu.find()) {
            vulnerabilities.add(new WpScan(
                    "Il semble que le site que vous avez renseigné ne soit pas basé sur WordPress, " +
                     "ou il est possible qu'une erreur se soit produite lors de l'analyse"
                    , Collections.emptyList()));
        } else {
            while (matcher.find()) {
                String title = matcher.group(1);
                String references = matcher.group(2);
                List<String> referenceLines = new ArrayList<>();
                String[] lines = references.trim().split("\n");
                for (String referenceLine : lines) {
                    referenceLines.add(referenceLine.trim().substring(2));
                }
                vulnerabilities.add(new WpScan(title, referenceLines));
            }
        }
        return vulnerabilities;
        }
}

